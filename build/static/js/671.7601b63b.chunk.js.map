{"version":3,"file":"static/js/671.7601b63b.chunk.js","mappings":"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","sources":["components/modal/addClientModal.jsx","pages/Admin/manageClient/index.jsx"],"sourcesContent":["import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport CommonTextFields from \"../common/Field/CommonTextFIelds\";\r\nimport \"../modal/modal.css\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addClientApi,\r\n  getSubscriptionApi,\r\n} from \"../../redux/action/adminAction\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CommonDropDown from \"../common/Field/CommonDropDown\";\r\nimport { adminSelector } from \"../../redux/slice/adminSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { usePassword } from \"../../hooks/usePassword\";\r\n\r\nexport default function AddClientModal(props) {\r\n  const { openModal=false, setOpenModal } = props;\r\n  const dispatch = useDispatch();\r\n  const generatePassword = usePassword();\r\n\r\n  const { getSubscriptionDetail, subscriptionDetail } =\r\n    useSelector(adminSelector);\r\n\r\n  const handleClose = () => {\r\n    setOpenModal(false);\r\n    formik.resetForm()\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getSubscriptionApi());\r\n  }, [subscriptionDetail]);\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      name: \"\",\r\n      email_id: \"\",\r\n      mobile_no: \"\",\r\n      billing: \"\",\r\n      subscription_plan: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string()\r\n        .required(\"Name is required\")\r\n        .matches(/^[a-zA-Z\\s]+$/, \"Name can only contain alphabet characters\"),\r\n      email_id: Yup.string()\r\n        .required(\"Email is required\")\r\n        .email(\"Invalid email format\"),\r\n      mobile_no: Yup.string()\r\n        .matches(/^[0-9]{10}$/, \"Invalid phone number\") // Check for 10-digit numeric phone number\r\n        .required(\"PhoneNumber is required\"),\r\n      billing: Yup.string().required(\"Billing is required\"),\r\n      subscription_plan: Yup.string().required(\"subscription plan is required\"),\r\n    }),\r\n    onSubmit: async (values, { resetForm }) => {\r\n      let val = {\r\n        // name: values.name,\r\n        email_id: values.email_id,\r\n        mobile_no: values.mobile_no,\r\n        billing: values.billing,\r\n        plan: values.subscription_plan,\r\n        password:generatePassword(values.name,values.mobile_no),\r\n        username:values.name,\r\n      };\r\n      dispatch(addClientApi(val));\r\n      resetForm();\r\n      setOpenModal(false);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={openModal}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <div className=\"dialogPad\">\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>\r\n              <DialogTitle\r\n                id=\"alert-dialog-title\"\r\n                sx={{ paddingLeft: \"0px !important\" }}\r\n              >\r\n                Add Clients\r\n              </DialogTitle>\r\n            </div>\r\n            <div>\r\n              <CancelIcon\r\n                sx={{ cursor: \"pointer\", color: \"red\" }}\r\n                onClick={handleClose}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <CommonTextFields\r\n              label=\"Username\"\r\n              id=\"name\"\r\n              formik={formik}\r\n              placeholder=\"\"\r\n            />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <CommonTextFields\r\n              label=\"Email\"\r\n              id=\"email_id\"\r\n              formik={formik}\r\n              placeholder=\"\"\r\n            />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <CommonTextFields\r\n              label=\"PhoneNumber\"\r\n              id=\"mobile_no\"\r\n              type=\"number\"\r\n              formik={formik}\r\n              placeholder=\"\"\r\n            />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            {/* <CommonTextFields\r\n              label=\"Subscriptions Plan\"\r\n              id=\"subscription_plan\"\r\n              formik={formik}\r\n              placeholder=\"\"\r\n            /> */}\r\n\r\n            <CommonDropDown\r\n              id=\"subscription_plan\"\r\n              label=\"Subscriptions Plan\"\r\n              formik={formik}\r\n              options={getSubscriptionDetail}\r\n            />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <CommonDropDown\r\n              label=\"Billing\"\r\n              id=\"billing\"\r\n              formik={formik}\r\n              options={getSubscriptionDetail}\r\n            />\r\n          </div>\r\n          <br />\r\n          <div className=\"contentCenter\">\r\n            <Button className=\"submitBtn\" onClick={formik.handleSubmit}>\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomizedTables from \"../../../components/common/commonTable\";\r\nimport { ClientDataHead } from \"../../../components/common/tableData\";\r\nimport AddClientModal from \"../../../components/modal/addClientModal\";\r\nimport { deleteClientApi, deleteRegisterApi, getClientApi, getSubscriptionApi } from \"../../../redux/action/adminAction\";\r\nimport { adminSelector } from \"../../../redux/slice/adminSlice\";\r\nimport \"../../../styles/App.css\";\r\n\r\nconst ManageClients = () => {\r\n  \r\n  const [modalOpen, setModalOpen] = useState();\r\n  const dispatch = useDispatch();\r\n  const { getClientDetail, clientDetail,getClientDetailisLoading ,deleteData,getSubscriptionDetail, subscriptionDetail} = useSelector(adminSelector);\r\n  const paginationRowsOptions = [5, 10, 20, 50, 100];\r\n\r\n\r\n  const handleModalOpen = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setModalOpen(false);\r\n  };\r\n  const handleDelete = (client)=>{\r\n    dispatch(deleteRegisterApi(client.id))\r\n    \r\n  }\r\n  useEffect(() => {\r\n    dispatch(getClientApi());\r\n    dispatch(getSubscriptionApi());\r\n  }, [clientDetail,deleteData,subscriptionDetail]); // Add getClientDetail as a dependency\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"commonbox\">\r\n      <div style={{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}}>\r\n        <h4>Manage Clients</h4>\r\n        <Button className=\"addBtn\" onClick={handleModalOpen}>\r\n          +Add\r\n        </Button>\r\n        </div>\r\n       \r\n        <CustomizedTables\r\n          columns={ClientDataHead}\r\n          rows={getClientDetail}\r\n          paginationStatus={true}\r\n          rowsPerPageOptions={paginationRowsOptions}\r\n          onDelete = {handleDelete}\r\n          dataLoading = {getClientDetailisLoading}\r\n          subscriptionData={getSubscriptionDetail}\r\n          \r\n        />\r\n        <AddClientModal openModal={modalOpen} setOpenModal={handleModalClose} />\r\n     \r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageClients;\r\n"],"names":["AddClientModal","props","openModal","setOpenModal","dispatch","useDispatch","generatePassword","usePassword","getSubscriptionDetail","subscriptionDetail","useSelector","adminSelector","handleClose","formik","resetForm","useEffect","getSubscriptionApi","useFormik","enableReinitialize","initialValues","name","email_id","mobile_no","billing","subscription_plan","validationSchema","Yup","required","matches","email","onSubmit","async","values","_ref","val","plan","password","username","addClientApi","_jsx","React","children","Dialog","open","onClose","_jsxs","className","style","display","justifyContent","DialogTitle","id","sx","paddingLeft","CancelIcon","cursor","color","onClick","CommonTextFields","label","placeholder","type","CommonDropDown","options","Button","handleSubmit","ManageClients","modalOpen","setModalOpen","useState","getClientDetail","clientDetail","getClientDetailisLoading","deleteData","getClientApi","_Fragment","alignItems","handleModalOpen","CustomizedTables","columns","ClientDataHead","rows","paginationStatus","rowsPerPageOptions","onDelete","client","deleteRegisterApi","dataLoading","subscriptionData","handleModalClose"],"sourceRoot":""}