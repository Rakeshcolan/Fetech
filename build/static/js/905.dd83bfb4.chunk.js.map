{"version":3,"file":"static/js/905.dd83bfb4.chunk.js","mappings":"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","sources":["utils/constants/chartData.jsx","components/chart/barChart.jsx","components/common/card.jsx","components/responseList.jsx","pages/Admin/dashboard/index.jsx"],"sourcesContent":["export const ChartData = [\r\n    {\r\n      id: 1,\r\n      year: 2016,\r\n      userGain: 80000,\r\n      userLost: 823\r\n    },\r\n    {\r\n      id: 2,\r\n      year: 2017,\r\n      userGain: 45677,\r\n      userLost: 345\r\n    },\r\n    {\r\n      id: 3,\r\n      year: 2018,\r\n      userGain: 78888,\r\n      userLost: 555\r\n    },\r\n    {\r\n      id: 4,\r\n      year: 2019,\r\n      userGain: 90000,\r\n      userLost: 4555\r\n    },\r\n    {\r\n      id: 5,\r\n      year: 2020,\r\n      userGain: 4300,\r\n      userLost: 234\r\n    }\r\n  ];","import {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { ChartData } from \"../../utils/constants/chartData\";\r\nimport \"./chartStyle.css\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const options = {\r\n  responsive: true,\r\n\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        barThickness: 2, // number (pixels) or 'flex'\r\n        // maxBarThickness: 8 // number (pixels)\r\n      },\r\n    ],\r\n    x: {\r\n      grid: {\r\n        display: false,\r\n      },\r\n    },\r\n    y: {\r\n      border: { dash: [4, 4] },\r\n      grid: {\r\n        color: \"#aaa\", // for the grid lines\r\n        tickColor: \"#000\", // for the tick mark\r\n        tickBorderDash: [2, 3], // also for the tick, if long enough\r\n        tickLength: 10, // just to see the dotted line\r\n        tickWidth: 2,\r\n        offset: true,\r\n        drawTicks: true, // true is default\r\n        drawOnChartArea: true, // true is default\r\n      },\r\n    },\r\n  },\r\n  // plugins: {\r\n  //   title: {\r\n  //     display: false,\r\n  //   },\r\n  //   legend: {\r\n  //     display: false,\r\n  //   },\r\n  // },\r\n  // scales: {\r\n  //   y: {\r\n  //     max: 3.5,\r\n\r\n  //   }\r\n  // },\r\n  // barPercentage: 0.4,\r\n};\r\n\r\nconst labels = [\"A\", \"BBB\", \"BB\"];\r\nexport const data = {\r\n  labels: ChartData.map((charts) => charts.year),\r\n  datasets: [\r\n    {\r\n      label: \"Dataset 1\",\r\n      data: ChartData.map((data) => data.userGain),\r\n      backgroundColor: \"#4F81BD\",\r\n      barThickness: 10,\r\n      borderColor: [\" #E5E5EF\"],\r\n      fill: true,\r\n      backgroundColor: \"#00E785\",\r\n\r\n      // borderColor: 'rgba(0,0,0,1)',\r\n      // fillColor: [\"rgba(0,10,220,0.5)\",\"rgba(220,0,10,0.5)\",\"rgba(220,0,0,0.5)\",\"rgba(120,250,120,0.5)\" ],\r\n      // strokeColor: \"rgba(220,220,220,0.8)\",\r\n      // highlightFill: \"rgba(220,220,220,0.75)\",\r\n      // highlightStroke: \"rgba(220,220,220,1)\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport function BarChart() {\r\n  return <Bar options={options} data={data} />;\r\n}\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport \"./commonComp.css\";\r\n\r\nexport default function DashCard({ cardItem }) {\r\n  return (\r\n    <>\r\n      <div className=\"cardcontainer\">\r\n        {cardItem.map((cards, i) => {\r\n          const { value, icon, name } = cards;\r\n          return (\r\n            <Card key={i} className=\"card\">\r\n              <CardContent className=\"uppercontent\">\r\n                <Typography\r\n                  sx={{ fontSize: 14 }}\r\n                  gutterBottom\r\n                  className=\"cardText\"\r\n                >\r\n                  {name}\r\n                </Typography>\r\n                <img src={icon} width=\"50\" height=\"50\" />\r\n              </CardContent>\r\n              <CardContent sx={{ padding: \"0px 15px\" }}>\r\n                <Typography sx={{ fontSize: \"38px\", padding: \"0px\",fontWeight:\"600\" }}>\r\n                  {value}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { ResponseCardItem } from \"../utils/constants/cardItem\";\r\nimport \"./comp.css\";\r\n\r\nexport default function ResponseList() {\r\n  return (\r\n    <div className=\"responsecontainer\">\r\n      <Typography\r\n        style={{\r\n          height: \"7%\",\r\n          margin: \"10px 15px\",\r\n          fontWeight: \"600\",\r\n          color: \"#1E1B39\",\r\n        }}\r\n      >\r\n        Reason For Dropping Off{\" \"}\r\n      </Typography>\r\n      <Divider />\r\n      <List sx={{ height: \"92%\" }}>\r\n        {ResponseCardItem.map((response,i) => {\r\n          const { icon, name, comment } = response;\r\n          return (\r\n            <>\r\n              <ListItem key={i} alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                  <Avatar alt=\"Remy Sharp\" src={icon} />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={<Typography sx={{fontWeight:\"600\"}}>{name}</Typography>}\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <Typography\r\n                        sx={{ display: \"inline\" }}\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        color=\"text.primary\"\r\n                      >\r\n                        {comment}\r\n                      </Typography>\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import { Divider } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BarChart } from \"../../../components/chart/barChart\";\r\nimport DashCard from \"../../../components/common/card\";\r\nimport CustomizedTables from \"../../../components/common/commonTable\";\r\nimport {\r\n  dashboardTableHead,\r\n} from \"../../../components/common/tableData\";\r\nimport ResponseList from \"../../../components/responseList\";\r\nimport { getEarningsApi } from \"../../../redux/action/adminAction\";\r\nimport { adminSelector } from \"../../../redux/slice/adminSlice\";\r\nimport { CardItem } from \"../../../utils/constants/cardItem\";\r\nimport \"./dashboardStyle.css\";\r\n\r\nconst Dashboard = () => {\r\n  const [size, setSize] = useState(0);\r\n  const [page, setPage] = useState(5);\r\n  const dispatch = useDispatch();\r\n  const { EarningsDetail } = useSelector(adminSelector);\r\n\r\n  const paginationRowsOptions = [5, 10, 20, 50, 100];\r\n\r\n  const handlePerRowsChange = async (event) => {\r\n    setPage(+event.target.value);\r\n    setSize(0);\r\n  };\r\n\r\n  const handlePageChange = async (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getEarningsApi());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboardcontainer\">\r\n      <DashCard cardItem={CardItem} />\r\n      <div className=\"statistics\">\r\n        <div className=\"barContainer\">\r\n          <div>\r\n            <p className=\"barheader\">Activity</p>\r\n            <p className=\"barheader\">Total Statistics</p>\r\n          </div>\r\n          <Divider />\r\n          <BarChart />\r\n        </div>\r\n        <div>\r\n          <ResponseList />\r\n        </div>\r\n      </div>\r\n      <div className=\"commonbox\">\r\n       <h2>Earnings</h2>\r\n       <br/>\r\n      <CustomizedTables\r\n        columns={dashboardTableHead}\r\n        rows={EarningsDetail}\r\n        paginationStatus={true}\r\n        rowsPerPageOptions={paginationRowsOptions}\r\n        page={page}\r\n        size={size}\r\n        handleChangePage={handlePageChange}\r\n        // dataLoading = {adminDataLoading}\r\n        handleChangeRowsPerPage={handlePerRowsChange}\r\n      />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["ChartData","id","year","userGain","userLost","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","options","responsive","scales","xAxes","barThickness","x","grid","display","y","border","dash","color","tickColor","tickBorderDash","tickLength","tickWidth","offset","drawTicks","drawOnChartArea","data","labels","map","charts","datasets","label","backgroundColor","borderColor","fill","BarChart","_jsx","Bar","DashCard","_ref","cardItem","_Fragment","children","className","cards","i","value","icon","name","_jsxs","Card","CardContent","Typography","sx","fontSize","gutterBottom","src","width","height","padding","fontWeight","ResponseList","style","margin","Divider","List","ResponseCardItem","response","comment","ListItem","alignItems","ListItemAvatar","Avatar","alt","ListItemText","primary","secondary","React","component","variant","Dashboard","size","setSize","useState","page","setPage","dispatch","useDispatch","EarningsDetail","useSelector","adminSelector","useEffect","getEarningsApi","CardItem","CustomizedTables","columns","dashboardTableHead","rows","paginationStatus","rowsPerPageOptions","handleChangePage","async","event","newPage","handleChangeRowsPerPage","target"],"sourceRoot":""}