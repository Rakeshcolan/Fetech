{"version":3,"file":"static/js/489.14924459.chunk.js","mappings":"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","sources":["pages/Auth/login/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CenteredTextField from \"../../../components/common/Field/CenteredTextField\";\r\nimport logo from \"../../../assests/images/connexLogo.png\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addLoginApi } from \"../../../redux/action/authAction\";\r\nimport { useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Login = () => {\r\n  let remembercheck = useRef(null)\r\n  const[rememberstatus,setRememberstatus] = useState(localStorage.getItem('remember')||false);\r\n  const[rememberme,setRememberme] = useState(localStorage.getItem('remember')||'')\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNavigate = (val) => {\r\n    navigate(`/${val}`);\r\n  };\r\n  \r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      username: localStorage.getItem('fetechApp-username')||\"\",\r\n      password: localStorage.getItem('fetechApp-password')|| \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      username: Yup.string()\r\n        .required(\"Username is required\")\r\n        .matches(/^[a-zA-Z\\s]+$/, \"Username can only contain alphabet characters\"),\r\n      password: Yup.string().required(\"Password is required\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      let val = {\r\n        username: values.username,\r\n        password: values.password,\r\n      };\r\n      if(rememberstatus){\r\n        localStorage.setItem('fetechApp-username',formik.values.username)\r\n        localStorage.setItem('fetechApp-password',formik.values.password)\r\n        \r\n      }\r\n      else {\r\n        localStorage.setItem('fetechApp-username','')\r\n        localStorage.setItem('fetechApp-password','')\r\n        localStorage.setItem('remember','')\r\n      }\r\n\r\n        dispatch(addLoginApi(val,navigate));\r\n\r\n    },\r\n  });\r\n  \r\n  useEffect(()=>{\r\n   \r\n    if(rememberme == 'true'){\r\n      remembercheck.current.checked = true\r\n    }\r\n  },[rememberme])\r\n\r\n  const handleKeyPress = (event) => {\r\n    if(event.key === 'Enter'){\r\n      formik.handleSubmit(formik.values)\r\n    }\r\n  }\r\n  const handleRemember = ()=>{\r\n    setRememberstatus(remembercheck?.current?.checked)\r\n    if(rememberme == 'true'){\r\n      localStorage.setItem('remember','')\r\n    }\r\n    else{\r\n      localStorage.setItem('remember','true')\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div>\r\n\r\n      <img\r\n        src={logo}\r\n        alt=\"Logo\"\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"200px\", // Adjust the width as needed\r\n          height: \"auto\", // Maintain aspect ratio\r\n        }}\r\n      />\r\n      <div className=\"loginCard\">\r\n        <div className=\"loginContainer\">\r\n          <h2>LOGIN</h2>\r\n          <br />\r\n          <CenteredTextField\r\n            label=\"Username\"\r\n            id=\"username\"\r\n            placeholder=\"Username\"\r\n            formik={formik}\r\n          />\r\n          <br />\r\n          <CenteredTextField\r\n            label=\"Password\"\r\n            id=\"password\"\r\n            type={\"password\"}\r\n            placeholder=\"Password\"\r\n            formik={formik}\r\n            keypress= {handleKeyPress}\r\n          />\r\n          <br />\r\n          <div className=\"form-options\">\r\n            <label>\r\n\r\n              <input type=\"checkbox\" name=\"rememberMe\" ref={remembercheck} onChange={handleRemember}/> Remember Me\r\n            </label>\r\n            <span className=\"forgot-password\" onClick={()=>handleNavigate('forgot')}>Forgot Password?</span>\r\n          </div>\r\n          <button className=\"loginBtn\" onClick={formik.handleSubmit}>Login</button>\r\n          <br />\r\n          <br />\r\n          <div>\r\n            <p>\r\n              Don't have an account?{\" \"}\r\n              <b style={{ cursor: \"pointer\" }} onClick={()=>handleNavigate(\"register\")}>\r\n                SignUp\r\n              </b>{\" \"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Login","remembercheck","useRef","rememberstatus","setRememberstatus","useState","localStorage","getItem","rememberme","setRememberme","navigate","useNavigate","dispatch","useDispatch","handleNavigate","val","concat","formik","useFormik","enableReinitialize","initialValues","username","password","validationSchema","Yup","required","matches","onSubmit","values","setItem","addLoginApi","useEffect","current","checked","_jsxs","children","_jsx","src","logo","alt","style","position","top","left","width","height","className","CenteredTextField","label","id","placeholder","type","keypress","event","key","handleSubmit","name","ref","onChange","handleRemember","_remembercheck$curren","onClick","cursor"],"sourceRoot":""}