{"version":3,"file":"static/js/522.5634b933.chunk.js","mappings":"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","sources":["components/modal/addSubscriptionModal.jsx","pages/Admin/manageSubscription/index.jsx"],"sourcesContent":["import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport CommonTextFields from \"../common/Field/CommonTextFIelds\";\r\nimport \"../modal/modal.css\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {  subscriptionApi } from \"../../redux/action/adminAction\";\r\nimport CommonDropDown from \"../common/Field/CommonDropDown\";\r\n\r\nexport default function AddSubscriptionModal(props) {\r\n  const { openModal=false, setOpenModal } = props;\r\n  const dispatch = useDispatch();\r\n  const handleClose = () => {\r\n    setOpenModal(false);\r\n    formik.resetForm()\r\n  };\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      plan: \"\",\r\n      subscription_amount: \"\",\r\n      description: \"\",\r\n      status: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      plan: Yup.string().required(\"Tier is required\"),\r\n      subscription_amount: Yup.string().required(\r\n        \"subscription amount is required\"\r\n      ),\r\n      description: Yup.string().required(\"Description is required\"),\r\n      status: Yup.string().required(\"status is required\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      let val = {\r\n        subscription_plan: values.plan,\r\n        billing: values.subscription_amount,\r\n        descrption: values.description,\r\n        status: values.status,\r\n      };\r\n      dispatch(subscriptionApi(val));\r\n      setOpenModal(false);\r\n    },\r\n  });\r\n\r\n  //   const handleSubadmins = () => {\r\n  //   };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={openModal}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <div className=\"dialogPad\">\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>\r\n              <DialogTitle\r\n                id=\"alert-dialog-title\"\r\n                sx={{ paddingLeft: \"0px !important\" }}\r\n              >\r\n                Add Subscription\r\n              </DialogTitle>\r\n            </div>\r\n            <div>\r\n              <CancelIcon\r\n                sx={{ cursor: \"pointer\", color: \"red\" }}\r\n                onClick={handleClose}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <CommonTextFields\r\n              label=\"Tier\"\r\n              id=\"plan\"\r\n              formik={formik}\r\n              placeholder=\"\"\r\n            />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <CommonTextFields\r\n              label=\"subscription Amount\"\r\n              id=\"subscription_amount\"\r\n              type=\"number\"\r\n              formik={formik}\r\n              placeholder=\"\"\r\n            />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <CommonTextFields\r\n              label=\"Description\"\r\n              id=\"description\"\r\n              formik={formik}\r\n              placeholder=\"\"\r\n            />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            {/* <CommonTextFields\r\n              label=\"Status\"\r\n              id=\"status\"\r\n              formik={formik}\r\n              placeholder=\"\"\r\n            /> */}\r\n              <CommonDropDown\r\n              id=\"status\"\r\n              label=\"Status\"\r\n              formik={formik}\r\n              options={[\r\n                {value:1,label:\"True\"},\r\n                {value:2,label:\"False\"}\r\n              ]}\r\n            />\r\n          </div>\r\n          <br />\r\n\r\n          <div className=\"contentCenter\">\r\n            <Button className=\"submitBtn\" onClick={formik.handleSubmit}>\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomizedTables from \"../../../components/common/commonTable\";\r\nimport { SubscriptionDataHead } from \"../../../components/common/tableData\";\r\nimport AddSubscriptionModal from \"../../../components/modal/addSubscriptionModal\";\r\nimport { deleteRegisterApi, deleteSubscriptionApi, getSubscriptionApi } from \"../../../redux/action/adminAction\";\r\nimport { adminSelector } from \"../../../redux/slice/adminSlice\";\r\nimport \"../../../styles/App.css\";\r\n\r\nconst ManageSubscription = () => {\r\n  const [size, setSize] = useState(0);\r\n  const [page, setPage] = useState(5);\r\n  const [modalOpen, setModalOpen] = useState();\r\n  const dispatch = useDispatch();\r\n  const { getSubscriptionDetail, subscriptionDetail,getSubscriptionDetailisLoading } =\r\n    useSelector(adminSelector);\r\n\r\n  const paginationRowsOptions = [5, 10, 20, 50, 100];\r\n\r\n  const handlePerRowsChange = async (event) => {\r\n    setPage(+event.target.value);\r\n    setSize(0);\r\n  };\r\n\r\n  const handlePageChange = async (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleModalOpen = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const handleDelete = (data)=>{\r\n    let id = data?.subscription_id;\r\n    dispatch(deleteSubscriptionApi(id))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getSubscriptionApi());\r\n  }, [subscriptionDetail,dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"commonbox\">\r\n        <div style={{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}}>\r\n        <h4>Manage Subscription</h4>\r\n        <Button className=\"addBtn\" onClick={handleModalOpen}>\r\n          + Add\r\n        </Button>\r\n        </div>\r\n        <CustomizedTables\r\n          columns={SubscriptionDataHead}\r\n          rows={getSubscriptionDetail}\r\n          paginationStatus={true}\r\n          rowsPerPageOptions={paginationRowsOptions}\r\n          page={page}\r\n          size={size}\r\n          onDelete = {handleDelete}\r\n          handleChangePage={handlePageChange}\r\n          dataLoading = {getSubscriptionDetailisLoading}\r\n          handleChangeRowsPerPage={handlePerRowsChange}\r\n        />\r\n        <AddSubscriptionModal\r\n          openModal={modalOpen}\r\n          setOpenModal={setModalOpen}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageSubscription;\r\n"],"names":["AddSubscriptionModal","props","openModal","setOpenModal","dispatch","useDispatch","handleClose","formik","resetForm","useFormik","enableReinitialize","initialValues","plan","subscription_amount","description","status","validationSchema","Yup","required","onSubmit","values","val","subscription_plan","billing","descrption","subscriptionApi","_jsx","React","children","Dialog","open","onClose","_jsxs","className","style","display","justifyContent","DialogTitle","id","sx","paddingLeft","CancelIcon","cursor","color","onClick","CommonTextFields","label","placeholder","type","CommonDropDown","options","value","Button","handleSubmit","ManageSubscription","size","setSize","useState","page","setPage","modalOpen","setModalOpen","getSubscriptionDetail","subscriptionDetail","getSubscriptionDetailisLoading","useSelector","adminSelector","useEffect","getSubscriptionApi","_Fragment","alignItems","handleModalOpen","CustomizedTables","columns","SubscriptionDataHead","rows","paginationStatus","rowsPerPageOptions","onDelete","data","subscription_id","deleteSubscriptionApi","handleChangePage","async","event","newPage","dataLoading","handleChangeRowsPerPage","target"],"sourceRoot":""}